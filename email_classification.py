# -*- coding: utf-8 -*-
"""Email_classification.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fNJFtWJPiR-QN3AoPHFYLeTZXRF6LczJ
"""

import numpy as np
import pandas as pd
from google.colab import drive
#Load the dataset
drive.mount('/content/drive',force_remount=True)

df = pd.read_csv('/content/drive/MyDrive/nlp/smsspamcollection.tsv',sep='\t')

df.head()

df.isnull().sum()

df['label'].value_counts()

from sklearn.model_selection import train_test_split

X=df['message']

y=df['label']

X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.33 ,random_state=42)

from sklearn.feature_extraction.text import CountVectorizer

count_vect = CountVectorizer()

# fit vectorizer to the data
# count_vect.fit(X_train)
# X_train_counts =count_vect.transform(X_train)
#transform the original text message ->vector

X_train_counts=count_vect.fit_transform(X_train)

X_train_counts.shape

from sklearn.feature_extraction.text import TfidfTransformer

tfidf_transformer =TfidfTransformer()

X_train_tfidf =tfidf_transformer.fit_transform(X_train_counts)

## tfidf vectorisation directly
from sklearn.feature_extraction.text import TfidfVectorizer

vectorizer =TfidfVectorizer()

X_train_tfidf = vectorizer.fit_transform(X_train)

print(X_train_tfidf.shape)

from sklearn.svm import LinearSVC

clf = LinearSVC()

clf.fit(X_train_tfidf ,y_train)

## short way

from sklearn.pipeline import Pipeline

text_clf= Pipeline([('tfidf',TfidfVectorizer()),('clf',LinearSVC())])

text_clf.fit(X_train ,y_train)

predictions =text_clf.predict(X_test)

from sklearn import metrics

print(metrics.confusion_matrix(y_test,predictions))

print(metrics.accuracy_score(y_test,predictions))

text_clf.predict(["Hi How are you doing ?"])

text_clf.predict(["Congragulations! You've been selected as a winner. TEXT WON to 44255 congragulations free entry to contest"])